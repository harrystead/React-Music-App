[{"C:\\Users\\44794\\Documents\\react-music-app\\src\\index.js":"1","C:\\Users\\44794\\Documents\\react-music-app\\src\\App.js":"2","C:\\Users\\44794\\Documents\\react-music-app\\src\\components\\Player.js":"3","C:\\Users\\44794\\Documents\\react-music-app\\src\\components\\Songs.js":"4","C:\\Users\\44794\\Documents\\react-music-app\\src\\data.js":"5","C:\\Users\\44794\\Documents\\react-music-app\\src\\components\\Library.js":"6","C:\\Users\\44794\\Documents\\react-music-app\\src\\components\\LibrarySongs.js":"7","C:\\Users\\44794\\Documents\\react-music-app\\src\\components\\Fetch.js":"8","C:\\Users\\44794\\Documents\\react-music-app\\src\\components\\Nav.js":"9","C:\\Users\\44794\\Documents\\react-music-app\\src\\util.js":"10"},{"size":187,"mtime":1612400124499,"results":"11","hashOfConfig":"12"},{"size":2107,"mtime":1612555266884,"results":"13","hashOfConfig":"12"},{"size":2854,"mtime":1612554274589,"results":"14","hashOfConfig":"12"},{"size":391,"mtime":1612555247690,"results":"15","hashOfConfig":"12"},{"size":2217,"mtime":1612176576982,"results":"16","hashOfConfig":"12"},{"size":777,"mtime":1612534154830,"results":"17","hashOfConfig":"12"},{"size":1160,"mtime":1612551714182,"results":"18","hashOfConfig":"12"},{"size":576,"mtime":1612388188594,"results":"19","hashOfConfig":"12"},{"size":471,"mtime":1612548803070,"results":"20","hashOfConfig":"12"},{"size":291,"mtime":1612551598559,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"19eijn0",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\44794\\Documents\\react-music-app\\src\\index.js",[],["45","46"],"C:\\Users\\44794\\Documents\\react-music-app\\src\\App.js",["47","48"],"C:\\Users\\44794\\Documents\\react-music-app\\src\\components\\Player.js",["49","50","51"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { playAudio } from \"../util\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  setSongInfo,\r\n  songInfo,\r\n  audioRef,\r\n  songs,\r\n  setSongs,\r\n}) => {\r\n  const audioPlay = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  }, [currentSong]);\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const skipTrackerHandler = (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    } else {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        setCurrentSong(songs[songs.length - 1]);\r\n        playAudio(isPlaying, audioRef);\r\n        return;\r\n      }\r\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    playAudio(isPlaying, audioRef);\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <input\r\n          min={0}\r\n          max={songInfo.duration || 0}\r\n          value={songInfo.currentTime}\r\n          onChange={dragHandler}\r\n          type=\"range\"\r\n        />\r\n        <p>{ songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackerHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={audioPlay}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackerHandler(\"skip-forward\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","C:\\Users\\44794\\Documents\\react-music-app\\src\\components\\Songs.js",[],"C:\\Users\\44794\\Documents\\react-music-app\\src\\data.js",[],"C:\\Users\\44794\\Documents\\react-music-app\\src\\components\\Library.js",["52"],"import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport React from \"react\";\r\nimport LibrarySong from \"./LibrarySongs\";\r\n\r\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? 'active-library' : \"\"} `}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            song={song}\r\n            songs={songs}\r\n            key={song.id}\r\n            id={song.id}\r\n            setCurrentSong={setCurrentSong}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","C:\\Users\\44794\\Documents\\react-music-app\\src\\components\\LibrarySongs.js",[],"C:\\Users\\44794\\Documents\\react-music-app\\src\\components\\Fetch.js",["53"],"C:\\Users\\44794\\Documents\\react-music-app\\src\\components\\Nav.js",[],"C:\\Users\\44794\\Documents\\react-music-app\\src\\util.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":28,"nodeType":"60","messageId":"61","endLine":1,"endColumn":37},{"ruleId":"58","severity":1,"message":"62","line":8,"column":8,"nodeType":"60","messageId":"61","endLine":8,"endColumn":13},{"ruleId":"58","severity":1,"message":"63","line":1,"column":28,"nodeType":"60","messageId":"61","endLine":1,"endColumn":34},{"ruleId":"58","severity":1,"message":"64","line":1,"column":36,"nodeType":"60","messageId":"61","endLine":1,"endColumn":44},{"ruleId":"65","severity":1,"message":"66","line":47,"column":6,"nodeType":"67","endLine":47,"endColumn":19,"suggestions":"68"},{"ruleId":"58","severity":1,"message":"69","line":1,"column":10,"nodeType":"60","messageId":"61","endLine":1,"endColumn":17},{"ruleId":"58","severity":1,"message":"70","line":5,"column":12,"nodeType":"60","messageId":"61","endLine":5,"endColumn":24},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["73"],"'library' is defined but never used.","'errorMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"76","text":"77"},[970,983],"[currentSong, setSongs, songs]"]